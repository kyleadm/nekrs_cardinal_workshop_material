diff --git a/nekrs/1_pipe_laminar/pipe.oudf b/nekrs/1_pipe_laminar/pipe.oudf
index 4238252..b388b58 100644
--- a/nekrs/1_pipe_laminar/pipe.oudf
+++ b/nekrs/1_pipe_laminar/pipe.oudf
@@ -1,16 +1,16 @@
 // Boundary conditions
-
-void velocityDirichletConditions(bcData *bc)
+void udfDirichlet(bcData *bc)
 {
-  // calculate parabolic inlet velocity profile
-  auto u_z = -(2*uInflow)*(1 - (( ((bc->x-cx0)*(bc->x-cx0))+((bc->y-cy0)*(bc->y-cy0)) )/(rPipe*rPipe)));
+  if (isField("fluid velocity")) {
+    // calculate parabolic inlet velocity profile
+    auto u_z = -(2*uInflow)*(1 - (( ((bc->x-cx0)*(bc->x-cx0))+((bc->y-cy0)*(bc->y-cy0)) )/(rPipe*rPipe)));
 
-  bc->u = 0.0;		// set velocity x component at inlet
-  bc->v = 0.0;		// set velocity y component at inlet
-  bc->w = u_z;		// set velocity z component at inlet
-}
+    bc->uxFluid = 0.0;		// set velocity x component at inlet
+    bc->uyFluid = 0.0;		// set velocity y component at inlet
+    bc->uzFluid = u_z;		// set velocity z component at inlet
+  }
 
-void pressureDirichletConditions(bcData *bc)
-{
-  bc->p = 0.0;		// set pressure at outlet
+  else if (isField("fluid pressure")) {
+    bc->pFluid = 0.0;		// set pressure at outlet
+  }
 }
\ No newline at end of file
diff --git a/nekrs/1_pipe_laminar/pipe.par b/nekrs/1_pipe_laminar/pipe.par
index ae373b4..0cbf16d 100644
--- a/nekrs/1_pipe_laminar/pipe.par
+++ b/nekrs/1_pipe_laminar/pipe.par
@@ -1,3 +1,5 @@
+userSections = CASEDATA
+
 [GENERAL]
 polynomialOrder = 3                         # spatial discretisation order (p-refinement)
 
@@ -6,13 +8,13 @@ endTime = 5                                 # [ND] Stops at specified simulation
 dt = 0.0025                                 # [ND] Timestep size
 timeStepper = tombo2                        # 2nd order timestepper
 
-writeControl = simulationTime               # simulationTime or steps
-writeInterval = 1                           # [ND] Writes output files every 1 simulation time unit
+checkpointControl = simulationTime          # simulationTime or steps
+checkpointInterval = 1                      # [ND] Writes output files every 1 simulation time unit
 
-[PRESSURE]
+[FLUID PRESSURE]
 residualTol = 1e-04                         # tolerance for pressure solve
 
-[VELOCITY]
+[FLUID VELOCITY]
 boundaryTypeMap = inlet, outlet, wall       # BC types: order corresponds to order of boundary IDs in the .exo mesh
 viscosity = -100                            # [ND] 1/Re, Re=100. Note minus sign means inverse here!
 density = 1.0                               # [ND]
diff --git a/nekrs/1_pipe_laminar/pipe.udf b/nekrs/1_pipe_laminar/pipe.udf
index 1df9243..7bd6634 100644
--- a/nekrs/1_pipe_laminar/pipe.udf
+++ b/nekrs/1_pipe_laminar/pipe.udf
@@ -15,28 +15,28 @@ static dfloat C_Y0;
 
 #endif
 
-void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
+void UDF_Setup0(MPI_Comm comm, setupAide &options)
 {
+  // Extract custom parameters specified in .par file
+  platform->par->extract("casedata", "r_pipe", R_PIPE);
+  platform->par->extract("casedata", "u_inflow", U_INFLOW);
+  platform->par->extract("casedata", "c_x0", C_X0);
+  platform->par->extract("casedata", "c_y0", C_Y0);
 }
 
-void UDF_LoadKernels(occa::properties& kernelInfo)
+void UDF_LoadKernels(deviceKernelProperties& kernelInfo)
 {
   // Send parameters specified in .par file to .oudf file (device kernels)
-  kernelInfo["defines/rPipe"]		= R_PIPE;
-  kernelInfo["defines/uInflow"]	= U_INFLOW;
-  kernelInfo["defines/cx0"]			= C_X0;
-  kernelInfo["defines/cy0"]			= C_Y0;
+  kernelInfo.define("rPipe") = R_PIPE;
+  kernelInfo.define("uInflow") = U_INFLOW;
+  kernelInfo.define("cx0") = C_X0;
+  kernelInfo.define("cy0") = C_Y0;
 }
 
-void UDF_Setup0(MPI_Comm comm, setupAide &options)
+void UDF_Setup()
 {
-  // Extract custom parameters specified in .par file
-  platform->par->extract("casedata","r_pipe",R_PIPE);
-  platform->par->extract("casedata","u_inflow",U_INFLOW);
-  platform->par->extract("casedata","c_x0",C_X0);
-  platform->par->extract("casedata","c_y0",C_Y0);
 }
 
-void UDF_Setup(nrs_t* nrs)
+void UDF_ExecuteStep(double time, int tstep)
 {
-}
+}
\ No newline at end of file
